# Real Estate Property Listing Application

## Project Overview

This is a modern real estate property listing application built with Next.js 13 (App Router) and Sanity CMS. The application allows users to browse property listings, filter by categories, search for properties, and view detailed information about each property.

### Key Features

- **Property Listings:** Browse all available properties with image previews, pricing, and key details
- **Category Filtering:** Filter properties by categories (Buy, Rent, Vacation Rentals, Luxury, Commercial)
- **Property Search:** Search properties by keyword, with results highlighting matching properties
- **Property Details:** View comprehensive information about each property including:
  - High-quality images and gallery
  - Property specifications (bedrooms, bathrooms, size)
  - Detailed descriptions
  - Key features and amenities
  - Location information
- **Contact Form:** Reach out to agents directly from property detail pages
- **Responsive Design:** Optimized for all device sizes from mobile to desktop

## Technology Stack

- **Frontend:** Next.js 13 with App Router
- **Styling:** Tailwind CSS
- **CMS:** Sanity.io
- **Data Fetching:** Server Components with async/await
- **Rendering:** React Server Components with Client Components for interactivity
- **Type Safety:** TypeScript

## Getting Started

### Prerequisites

- Node.js 18.x or later
- npm or yarn
- A Sanity.io account and project

### Installation

1. Clone the repository

```bash
git clone <repository-url>
cd dev-diff-fe
```

2. Install dependencies

```bash
npm install
# or
yarn install
```

3. Set up environment variables

Create a `.env.local` file in the root directory with the following variables:

```
NEXT_PUBLIC_SANITY_PROJECT_ID=your_sanity_project_id
NEXT_PUBLIC_SANITY_DATASET=production
NEXT_PUBLIC_SANITY_API_VERSION=2023-08-03
```

### Running the Development Server

```bash
npm run dev
# or
yarn dev
```

Open [http://localhost:3000](http://localhost:3000) in your browser to see the application.

## Project Structure

```
/src
  /app                  # Next.js App Router pages
    /page.tsx           # Homepage
    /property
      /page.tsx         # Property listing page with search
      /[slug]/page.tsx  # Dynamic property detail page
  /components           # Reusable UI components
    /Header.tsx
    /Footer.tsx
    /PropertyCard.tsx
    /SearchBar.tsx
    /CategoryButton.tsx
    /Logo.tsx
    /SearchResultsHeader.tsx
    /index.ts           # Barrel exports
  /view                 # Client components
    /HomepageListedClient.tsx
  /context              # React Context providers
    /SearchContext.tsx  # Search state management
  /sanity               # Sanity configuration
    /client.ts          # Sanity client setup
```

## Constraints and Limitations

- **Sanity Schema:** The application expects a specific Sanity schema for properties with fields like:
  - `title`, `slug`, `location`, `price`, `image`, `description`, `bedrooms`, `bathrooms`, `sqFeet`, `categories`, `features`, `isPublished`
- **Image Handling:** Property images must be uploaded to Sanity and referenced in the property documents
- **Search Functionality:** Currently limited to searching property titles and locations
- **Contact Form:** Form submission functionality is not implemented yet - currently UI only
- **Authentication:** User authentication is not implemented in this version
- **Pagination:** The application does not currently support pagination for large property sets

## Future Enhancements

- Implement contact form submission functionality
- Add user authentication and favorites/saved properties
- Add pagination for property listings
- Implement advanced filtering (price range, property features)
- Add map integration for property locations
- Implement property comparison feature

## License

This project is licensed under the MIT License - see the LICENSE file for details.
